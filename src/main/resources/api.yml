openapi: 3.0.3
info:
  title: Account Service API
  description: API for managing bank accounts in the banking system.
  version: 1.0.0
servers:
  - url: http://localhost:8082/api/accounts
    description: Local Server
paths:
  /:
    post:
      summary: Create a bank account
      description: Creates a new bank account for a customer.
      operationId: createAccount
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "201":
          description: Account successfully created.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid data or business rules not met.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    get:
      summary: Get all accounts
      description: Returns all bank accounts in the system
      operationId: findAllAccounts
      responses:
        "200":
          description: List of accounts found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountListResponse"
        "404":
          description: No accounts found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /{accountId}:
    get:
      summary: Get bank account details
      description: Returns the details of a specific bank account.
      operationId: getAccountById
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Account not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    put:
      summary: Update a bank account
      description: Updates details of an existing bank account.
      operationId: updateAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Account"
      responses:
        "200":
          description: Account successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Invalid data provided.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
    delete:
      summary: Delete a bank account
      description: Deletes an existing bank account.
      operationId: deleteAccount
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account successfully deleted.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "400":
          description: Error deleting account.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /customer/{customerId}:
    get:
      summary: Get all accounts of a customer
      description: Returns all bank accounts associated with a customer.
      operationId: getAccountsByCustomer
      parameters:
        - name: customerId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of accounts found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AccountListResponse"
        "404":
          description: No accounts found for the customer.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
  /{accountId}/vip-pym/status:
    put:
      summary: Update VIP or PYM status of an account
      description: Updates the VIP or PYM status of an existing account
      operationId: updateVipPymStatus
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
        - name: isVipPym
          in: query
          required: true
          schema:
            type: boolean
        - name: type
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Account status successfully updated.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
        "404":
          description: Account not found.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseResponse"
components:
  schemas:
    Account:
      type: object
      required:
        - customerId
        - accountType
        - balance
      properties:
        id:
          type: string
          description: Unique identifier for the account
        customerId:
          type: string
          description: ID of the customer who owns the account
        accountType:
          type: string
          enum: [SAVINGS, CHECKING, FIXED_TERM]
          description: Type of bank account
        balance:
          type: number
          format: double
          description: Current account balance
        isVipAccount:
          type: boolean
          description: Indicates if the account is VIP (only for SAVINGS accounts)
        minBalanceRequirement:
          type: number
          description: Minimum balance requirement (only if the account is VIP)
        isPymAccount:
          type: boolean
          description: Indicates if the account is PYM (only for CHECKING accounts)
        maintenanFee:
          type: number
          description: Maintenance fee (is 0 only if the account is PYM)
        holders:
          type: array
          description: Account holders
          items:
            type: string
        signers:
          type: array
          description: Authorized signers
          items:
            type: string
        createdAd:
          type: string
          format: date-time
          description: Date and time when the account was created
        modifiedAd:
          type: string
          format: date-time
          description: Date and time when the account was last modified
        maxFreeTransaction:
          type: integer
          description: Maximum number of free transactions allowed
        transactionCost:
          type: number
          description: Cost per transaction after exceeding free transactions
    BaseResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Response message
        data:
          oneOf:
            - $ref: "#/components/schemas/Account"
            - type: "null"
          description: Response data
    AccountListResponse:
      type: object
      properties:
        status:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Response message
        data:
          type: array
          items:
            $ref: "#/components/schemas/Account"
          description: List of accounts